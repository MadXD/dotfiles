#!/usr/bin/env python2.7
# -*- mode: python -*-
# -*- coding: utf-8 -*-

from __future__ import print_function

import argparse
import json
import os
import os.path
import subprocess
import sys


HERE = os.path.dirname(os.path.abspath(__file__))


def main():
    # Load JSON feed
    with open('install.json', 'r') as f:
        MANIFEST = json.load(f)

    # Install files from most general to more specific platform.
    for section in ['any', sys.platform]:
        if section in MANIFEST:
            process_entries(MANIFEST[section])


def process_entries(entries):
    for entry in entries:
        install(entry['source'], entry['dest'])


def install(source, dest):
    source_path = os.path.join(os.getcwd(), source)
    dest_path = os.path.expandvars(os.path.expanduser(dest))

    if os.path.isfile(source_path):
        symlink(source_path, dest_path)
    elif os.path.isdir(source_path):
        for dirpath, _, filenames in os.walk(source_path):
            for f in filenames:
                s = os.path.join(dirpath, f)
                d = os.path.join(dest_path, os.path.relpath(s, start=source))

                symlink(s, d)


def symlink(source, dest):
    if not os.path.exists(os.path.dirname(dest)):
        os.makedirs(os.path.dirname(dest))

    if os.path.lexists(dest):
        os.unlink(dest)

    if sys.platform == 'cygwin':
        win_dest = subprocess.check_output(['cygpath', '-a', '-w', dest])[:-1]
        win_source = subprocess.check_output(['cygpath', '-a', '-w', source])[:-1]

        subprocess.check_output(['cmd', '/C', 'mklink', win_dest, win_source])
    else:
        os.symlink(source, dest)


if __name__ == '__main__':
    main()
